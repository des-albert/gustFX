package com.sforce.soap.enterprise;

/**
 * This is a generated class for the SObject Enterprise API.
 * Do not edit this file, as your changes will be lost.
 */
public class DescribeSObjectListViews_element implements com.sforce.ws.bind.XMLizable {

    /**
     * Constructor
     */
    public DescribeSObjectListViews_element() {}

    /* Cache the typeInfo instead of declaring static fields throughout*/
    private transient java.util.Map<String, com.sforce.ws.bind.TypeInfo> typeInfoCache = new java.util.HashMap<String, com.sforce.ws.bind.TypeInfo>();
    private com.sforce.ws.bind.TypeInfo _lookupTypeInfo(String fieldName, String namespace, String name, String typeNS, String type, int minOcc, int maxOcc, boolean elementForm) {
      com.sforce.ws.bind.TypeInfo typeInfo = typeInfoCache.get(fieldName);
      if (typeInfo == null) {
        typeInfo = new com.sforce.ws.bind.TypeInfo(namespace, name, typeNS, type, minOcc, maxOcc, elementForm);
        typeInfoCache.put(fieldName, typeInfo);
      }
      return typeInfo;
    }

    /**
     * element : sObjectType of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean sObjectType__is_set = false;

    private java.lang.String sObjectType;

    public java.lang.String getSObjectType() {
      return sObjectType;
    }

    public void setSObjectType(java.lang.String sObjectType) {
      this.sObjectType = sObjectType;
      sObjectType__is_set = true;
    }

    protected void setSObjectType(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("sObjectType", "urn:enterprise.soap.sforce.com","sObjectType","http://www.w3.org/2001/XMLSchema","string",1,1,true))) {
        setSObjectType(__typeMapper.readString(__in, _lookupTypeInfo("sObjectType", "urn:enterprise.soap.sforce.com","sObjectType","http://www.w3.org/2001/XMLSchema","string",1,1,true), java.lang.String.class));
      }
    }

    private void writeFieldSObjectType(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("sObjectType", "urn:enterprise.soap.sforce.com","sObjectType","http://www.w3.org/2001/XMLSchema","string",1,1,true), sObjectType, sObjectType__is_set);
    }

    /**
     * element : recentsOnly of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean recentsOnly__is_set = false;

    private boolean recentsOnly;

    public boolean getRecentsOnly() {
      return recentsOnly;
    }

    public boolean isRecentsOnly() {
      return recentsOnly;
    }

    public void setRecentsOnly(boolean recentsOnly) {
      this.recentsOnly = recentsOnly;
      recentsOnly__is_set = true;
    }

    protected void setRecentsOnly(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("recentsOnly", "urn:enterprise.soap.sforce.com","recentsOnly","http://www.w3.org/2001/XMLSchema","boolean",1,1,true))) {
        setRecentsOnly(__typeMapper.readBoolean(__in, _lookupTypeInfo("recentsOnly", "urn:enterprise.soap.sforce.com","recentsOnly","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), boolean.class));
      }
    }

    private void writeFieldRecentsOnly(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("recentsOnly", "urn:enterprise.soap.sforce.com","recentsOnly","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), recentsOnly, recentsOnly__is_set);
    }

    /**
     * element : isSoqlCompatible of type {urn:enterprise.soap.sforce.com}listViewIsSoqlCompatible
     * java type: com.sforce.soap.enterprise.ListViewIsSoqlCompatible
     */
    private boolean isSoqlCompatible__is_set = false;

    private com.sforce.soap.enterprise.ListViewIsSoqlCompatible isSoqlCompatible;

    public com.sforce.soap.enterprise.ListViewIsSoqlCompatible getIsSoqlCompatible() {
      return isSoqlCompatible;
    }

    public void setIsSoqlCompatible(com.sforce.soap.enterprise.ListViewIsSoqlCompatible isSoqlCompatible) {
      this.isSoqlCompatible = isSoqlCompatible;
      isSoqlCompatible__is_set = true;
    }

    protected void setIsSoqlCompatible(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("isSoqlCompatible", "urn:enterprise.soap.sforce.com","isSoqlCompatible","urn:enterprise.soap.sforce.com","listViewIsSoqlCompatible",1,1,true))) {
        setIsSoqlCompatible((com.sforce.soap.enterprise.ListViewIsSoqlCompatible)__typeMapper.readObject(__in, _lookupTypeInfo("isSoqlCompatible", "urn:enterprise.soap.sforce.com","isSoqlCompatible","urn:enterprise.soap.sforce.com","listViewIsSoqlCompatible",1,1,true), com.sforce.soap.enterprise.ListViewIsSoqlCompatible.class));
      }
    }

    private void writeFieldIsSoqlCompatible(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("isSoqlCompatible", "urn:enterprise.soap.sforce.com","isSoqlCompatible","urn:enterprise.soap.sforce.com","listViewIsSoqlCompatible",1,1,true), isSoqlCompatible, isSoqlCompatible__is_set);
    }

    /**
     * element : limit of type {http://www.w3.org/2001/XMLSchema}int
     * java type: int
     */
    private boolean limit__is_set = false;

    private int limit;

    public int getLimit() {
      return limit;
    }

    public void setLimit(int limit) {
      this.limit = limit;
      limit__is_set = true;
    }

    protected void setLimit(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("limit", "urn:enterprise.soap.sforce.com","limit","http://www.w3.org/2001/XMLSchema","int",1,1,true))) {
        setLimit((int)__typeMapper.readInt(__in, _lookupTypeInfo("limit", "urn:enterprise.soap.sforce.com","limit","http://www.w3.org/2001/XMLSchema","int",1,1,true), int.class));
      }
    }

    private void writeFieldLimit(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("limit", "urn:enterprise.soap.sforce.com","limit","http://www.w3.org/2001/XMLSchema","int",1,1,true), limit, limit__is_set);
    }

    /**
     * element : offset of type {http://www.w3.org/2001/XMLSchema}int
     * java type: int
     */
    private boolean offset__is_set = false;

    private int offset;

    public int getOffset() {
      return offset;
    }

    public void setOffset(int offset) {
      this.offset = offset;
      offset__is_set = true;
    }

    protected void setOffset(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("offset", "urn:enterprise.soap.sforce.com","offset","http://www.w3.org/2001/XMLSchema","int",1,1,true))) {
        setOffset((int)__typeMapper.readInt(__in, _lookupTypeInfo("offset", "urn:enterprise.soap.sforce.com","offset","http://www.w3.org/2001/XMLSchema","int",1,1,true), int.class));
      }
    }

    private void writeFieldOffset(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("offset", "urn:enterprise.soap.sforce.com","offset","http://www.w3.org/2001/XMLSchema","int",1,1,true), offset, offset__is_set);
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       writeFields1(__out, __typeMapper);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        loadFields1(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[DescribeSObjectListViews_element ");
      toString1(sb);

      sb.append("]\n");
      return sb.toString();
    }

    private void toStringHelper(StringBuilder sb, String name, Object value) {
      sb.append(' ').append(name).append("='").append(com.sforce.ws.util.Verbose.toString(value)).append("'\n");
    }

    private void writeFields1(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      writeFieldSObjectType(__out, __typeMapper);
      writeFieldRecentsOnly(__out, __typeMapper);
      writeFieldIsSoqlCompatible(__out, __typeMapper);
      writeFieldLimit(__out, __typeMapper);
      writeFieldOffset(__out, __typeMapper);
    }

    private void loadFields1(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      setSObjectType(__in, __typeMapper);
      setRecentsOnly(__in, __typeMapper);
      setIsSoqlCompatible(__in, __typeMapper);
      setLimit(__in, __typeMapper);
      setOffset(__in, __typeMapper);
    }

    private void toString1(StringBuilder sb) {
      toStringHelper(sb, "sObjectType", sObjectType);
      toStringHelper(sb, "recentsOnly", recentsOnly);
      toStringHelper(sb, "isSoqlCompatible", isSoqlCompatible);
      toStringHelper(sb, "limit", limit);
      toStringHelper(sb, "offset", offset);
    }


}
