package com.sforce.soap.enterprise;

/**
 * This is a generated class for the SObject Enterprise API.
 * Do not edit this file, as your changes will be lost.
 */
public class EmailFileAttachment implements com.sforce.ws.bind.XMLizable {

    /**
     * Constructor
     */
    public EmailFileAttachment() {}

    /* Cache the typeInfo instead of declaring static fields throughout*/
    private transient java.util.Map<String, com.sforce.ws.bind.TypeInfo> typeInfoCache = new java.util.HashMap<String, com.sforce.ws.bind.TypeInfo>();
    private com.sforce.ws.bind.TypeInfo _lookupTypeInfo(String fieldName, String namespace, String name, String typeNS, String type, int minOcc, int maxOcc, boolean elementForm) {
      com.sforce.ws.bind.TypeInfo typeInfo = typeInfoCache.get(fieldName);
      if (typeInfo == null) {
        typeInfo = new com.sforce.ws.bind.TypeInfo(namespace, name, typeNS, type, minOcc, maxOcc, elementForm);
        typeInfoCache.put(fieldName, typeInfo);
      }
      return typeInfo;
    }

    /**
     * element : body of type {http://www.w3.org/2001/XMLSchema}base64Binary
     * java type: byte[]
     */
    private boolean body__is_set = false;

    private byte[] body;

    public byte[] getBody() {
      return body;
    }

    public void setBody(byte[] body) {
      this.body = body;
      body__is_set = true;
    }

    protected void setBody(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("body", "urn:enterprise.soap.sforce.com","body","http://www.w3.org/2001/XMLSchema","base64Binary",0,1,true))) {
        setBody((byte[])__typeMapper.readObject(__in, _lookupTypeInfo("body", "urn:enterprise.soap.sforce.com","body","http://www.w3.org/2001/XMLSchema","base64Binary",0,1,true), byte[].class));
      }
    }

    private void writeFieldBody(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("body", "urn:enterprise.soap.sforce.com","body","http://www.w3.org/2001/XMLSchema","base64Binary",0,1,true), body, body__is_set);
    }

    /**
     * element : contentType of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean contentType__is_set = false;

    private java.lang.String contentType;

    public java.lang.String getContentType() {
      return contentType;
    }

    public void setContentType(java.lang.String contentType) {
      this.contentType = contentType;
      contentType__is_set = true;
    }

    protected void setContentType(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("contentType", "urn:enterprise.soap.sforce.com","contentType","http://www.w3.org/2001/XMLSchema","string",0,1,true))) {
        setContentType(__typeMapper.readString(__in, _lookupTypeInfo("contentType", "urn:enterprise.soap.sforce.com","contentType","http://www.w3.org/2001/XMLSchema","string",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldContentType(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("contentType", "urn:enterprise.soap.sforce.com","contentType","http://www.w3.org/2001/XMLSchema","string",0,1,true), contentType, contentType__is_set);
    }

    /**
     * element : fileName of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean fileName__is_set = false;

    private java.lang.String fileName;

    public java.lang.String getFileName() {
      return fileName;
    }

    public void setFileName(java.lang.String fileName) {
      this.fileName = fileName;
      fileName__is_set = true;
    }

    protected void setFileName(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("fileName", "urn:enterprise.soap.sforce.com","fileName","http://www.w3.org/2001/XMLSchema","string",1,1,true))) {
        setFileName(__typeMapper.readString(__in, _lookupTypeInfo("fileName", "urn:enterprise.soap.sforce.com","fileName","http://www.w3.org/2001/XMLSchema","string",1,1,true), java.lang.String.class));
      }
    }

    private void writeFieldFileName(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("fileName", "urn:enterprise.soap.sforce.com","fileName","http://www.w3.org/2001/XMLSchema","string",1,1,true), fileName, fileName__is_set);
    }

    /**
     * element : id of type {urn:enterprise.soap.sforce.com}ID
     * java type: java.lang.String
     */
    private boolean id__is_set = false;

    private java.lang.String id;

    public java.lang.String getId() {
      return id;
    }

    public void setId(java.lang.String id) {
      this.id = id;
      id__is_set = true;
    }

    protected void setId(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("id", "urn:enterprise.soap.sforce.com","id","urn:enterprise.soap.sforce.com","ID",0,1,true))) {
        setId(__typeMapper.readString(__in, _lookupTypeInfo("id", "urn:enterprise.soap.sforce.com","id","urn:enterprise.soap.sforce.com","ID",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldId(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("id", "urn:enterprise.soap.sforce.com","id","urn:enterprise.soap.sforce.com","ID",0,1,true), id, id__is_set);
    }

    /**
     * element : inline of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean inline__is_set = false;

    private boolean inline;

    public boolean getInline() {
      return inline;
    }

    public boolean isInline() {
      return inline;
    }

    public void setInline(boolean inline) {
      this.inline = inline;
      inline__is_set = true;
    }

    protected void setInline(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("inline", "urn:enterprise.soap.sforce.com","inline","http://www.w3.org/2001/XMLSchema","boolean",0,1,true))) {
        setInline(__typeMapper.readBoolean(__in, _lookupTypeInfo("inline", "urn:enterprise.soap.sforce.com","inline","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), boolean.class));
      }
    }

    private void writeFieldInline(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("inline", "urn:enterprise.soap.sforce.com","inline","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), inline, inline__is_set);
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       writeFields1(__out, __typeMapper);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        loadFields1(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[EmailFileAttachment ");
      toString1(sb);

      sb.append("]\n");
      return sb.toString();
    }

    private void toStringHelper(StringBuilder sb, String name, Object value) {
      sb.append(' ').append(name).append("='").append(com.sforce.ws.util.Verbose.toString(value)).append("'\n");
    }

    private void writeFields1(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      writeFieldBody(__out, __typeMapper);
      writeFieldContentType(__out, __typeMapper);
      writeFieldFileName(__out, __typeMapper);
      writeFieldId(__out, __typeMapper);
      writeFieldInline(__out, __typeMapper);
    }

    private void loadFields1(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      setBody(__in, __typeMapper);
      setContentType(__in, __typeMapper);
      setFileName(__in, __typeMapper);
      setId(__in, __typeMapper);
      setInline(__in, __typeMapper);
    }

    private void toString1(StringBuilder sb) {
      toStringHelper(sb, "body", body);
      toStringHelper(sb, "contentType", contentType);
      toStringHelper(sb, "fileName", fileName);
      toStringHelper(sb, "id", id);
      toStringHelper(sb, "inline", inline);
    }


}
