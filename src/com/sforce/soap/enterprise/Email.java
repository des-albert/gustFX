package com.sforce.soap.enterprise;

/**
 * This is a generated class for the SObject Enterprise API.
 * Do not edit this file, as your changes will be lost.
 */
public class Email implements com.sforce.ws.bind.XMLizable {

    /**
     * Constructor
     */
    public Email() {}

    /* Cache the typeInfo instead of declaring static fields throughout*/
    private transient java.util.Map<String, com.sforce.ws.bind.TypeInfo> typeInfoCache = new java.util.HashMap<String, com.sforce.ws.bind.TypeInfo>();
    private com.sforce.ws.bind.TypeInfo _lookupTypeInfo(String fieldName, String namespace, String name, String typeNS, String type, int minOcc, int maxOcc, boolean elementForm) {
      com.sforce.ws.bind.TypeInfo typeInfo = typeInfoCache.get(fieldName);
      if (typeInfo == null) {
        typeInfo = new com.sforce.ws.bind.TypeInfo(namespace, name, typeNS, type, minOcc, maxOcc, elementForm);
        typeInfoCache.put(fieldName, typeInfo);
      }
      return typeInfo;
    }

    /**
     * element : bccSender of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: java.lang.Boolean
     */
    private boolean bccSender__is_set = false;

    private java.lang.Boolean bccSender;

    public java.lang.Boolean getBccSender() {
      return bccSender;
    }

    public void setBccSender(java.lang.Boolean bccSender) {
      this.bccSender = bccSender;
      bccSender__is_set = true;
    }

    protected void setBccSender(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("bccSender", "urn:enterprise.soap.sforce.com","bccSender","http://www.w3.org/2001/XMLSchema","boolean",1,1,true))) {
        setBccSender((java.lang.Boolean)__typeMapper.readObject(__in, _lookupTypeInfo("bccSender", "urn:enterprise.soap.sforce.com","bccSender","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), java.lang.Boolean.class));
      }
    }

    private void writeFieldBccSender(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("bccSender", "urn:enterprise.soap.sforce.com","bccSender","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), bccSender, bccSender__is_set);
    }

    /**
     * element : emailPriority of type {urn:enterprise.soap.sforce.com}EmailPriority
     * java type: com.sforce.soap.enterprise.EmailPriority
     */
    private boolean emailPriority__is_set = false;

    private com.sforce.soap.enterprise.EmailPriority emailPriority;

    public com.sforce.soap.enterprise.EmailPriority getEmailPriority() {
      return emailPriority;
    }

    public void setEmailPriority(com.sforce.soap.enterprise.EmailPriority emailPriority) {
      this.emailPriority = emailPriority;
      emailPriority__is_set = true;
    }

    protected void setEmailPriority(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("emailPriority", "urn:enterprise.soap.sforce.com","emailPriority","urn:enterprise.soap.sforce.com","EmailPriority",1,1,true))) {
        setEmailPriority((com.sforce.soap.enterprise.EmailPriority)__typeMapper.readObject(__in, _lookupTypeInfo("emailPriority", "urn:enterprise.soap.sforce.com","emailPriority","urn:enterprise.soap.sforce.com","EmailPriority",1,1,true), com.sforce.soap.enterprise.EmailPriority.class));
      }
    }

    private void writeFieldEmailPriority(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("emailPriority", "urn:enterprise.soap.sforce.com","emailPriority","urn:enterprise.soap.sforce.com","EmailPriority",1,1,true), emailPriority, emailPriority__is_set);
    }

    /**
     * element : replyTo of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean replyTo__is_set = false;

    private java.lang.String replyTo;

    public java.lang.String getReplyTo() {
      return replyTo;
    }

    public void setReplyTo(java.lang.String replyTo) {
      this.replyTo = replyTo;
      replyTo__is_set = true;
    }

    protected void setReplyTo(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("replyTo", "urn:enterprise.soap.sforce.com","replyTo","http://www.w3.org/2001/XMLSchema","string",1,1,true))) {
        setReplyTo(__typeMapper.readString(__in, _lookupTypeInfo("replyTo", "urn:enterprise.soap.sforce.com","replyTo","http://www.w3.org/2001/XMLSchema","string",1,1,true), java.lang.String.class));
      }
    }

    private void writeFieldReplyTo(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("replyTo", "urn:enterprise.soap.sforce.com","replyTo","http://www.w3.org/2001/XMLSchema","string",1,1,true), replyTo, replyTo__is_set);
    }

    /**
     * element : saveAsActivity of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: java.lang.Boolean
     */
    private boolean saveAsActivity__is_set = false;

    private java.lang.Boolean saveAsActivity;

    public java.lang.Boolean getSaveAsActivity() {
      return saveAsActivity;
    }

    public void setSaveAsActivity(java.lang.Boolean saveAsActivity) {
      this.saveAsActivity = saveAsActivity;
      saveAsActivity__is_set = true;
    }

    protected void setSaveAsActivity(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("saveAsActivity", "urn:enterprise.soap.sforce.com","saveAsActivity","http://www.w3.org/2001/XMLSchema","boolean",1,1,true))) {
        setSaveAsActivity((java.lang.Boolean)__typeMapper.readObject(__in, _lookupTypeInfo("saveAsActivity", "urn:enterprise.soap.sforce.com","saveAsActivity","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), java.lang.Boolean.class));
      }
    }

    private void writeFieldSaveAsActivity(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("saveAsActivity", "urn:enterprise.soap.sforce.com","saveAsActivity","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), saveAsActivity, saveAsActivity__is_set);
    }

    /**
     * element : senderDisplayName of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean senderDisplayName__is_set = false;

    private java.lang.String senderDisplayName;

    public java.lang.String getSenderDisplayName() {
      return senderDisplayName;
    }

    public void setSenderDisplayName(java.lang.String senderDisplayName) {
      this.senderDisplayName = senderDisplayName;
      senderDisplayName__is_set = true;
    }

    protected void setSenderDisplayName(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("senderDisplayName", "urn:enterprise.soap.sforce.com","senderDisplayName","http://www.w3.org/2001/XMLSchema","string",1,1,true))) {
        setSenderDisplayName(__typeMapper.readString(__in, _lookupTypeInfo("senderDisplayName", "urn:enterprise.soap.sforce.com","senderDisplayName","http://www.w3.org/2001/XMLSchema","string",1,1,true), java.lang.String.class));
      }
    }

    private void writeFieldSenderDisplayName(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("senderDisplayName", "urn:enterprise.soap.sforce.com","senderDisplayName","http://www.w3.org/2001/XMLSchema","string",1,1,true), senderDisplayName, senderDisplayName__is_set);
    }

    /**
     * element : subject of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean subject__is_set = false;

    private java.lang.String subject;

    public java.lang.String getSubject() {
      return subject;
    }

    public void setSubject(java.lang.String subject) {
      this.subject = subject;
      subject__is_set = true;
    }

    protected void setSubject(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("subject", "urn:enterprise.soap.sforce.com","subject","http://www.w3.org/2001/XMLSchema","string",1,1,true))) {
        setSubject(__typeMapper.readString(__in, _lookupTypeInfo("subject", "urn:enterprise.soap.sforce.com","subject","http://www.w3.org/2001/XMLSchema","string",1,1,true), java.lang.String.class));
      }
    }

    private void writeFieldSubject(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("subject", "urn:enterprise.soap.sforce.com","subject","http://www.w3.org/2001/XMLSchema","string",1,1,true), subject, subject__is_set);
    }

    /**
     * element : useSignature of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: java.lang.Boolean
     */
    private boolean useSignature__is_set = false;

    private java.lang.Boolean useSignature;

    public java.lang.Boolean getUseSignature() {
      return useSignature;
    }

    public void setUseSignature(java.lang.Boolean useSignature) {
      this.useSignature = useSignature;
      useSignature__is_set = true;
    }

    protected void setUseSignature(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("useSignature", "urn:enterprise.soap.sforce.com","useSignature","http://www.w3.org/2001/XMLSchema","boolean",1,1,true))) {
        setUseSignature((java.lang.Boolean)__typeMapper.readObject(__in, _lookupTypeInfo("useSignature", "urn:enterprise.soap.sforce.com","useSignature","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), java.lang.Boolean.class));
      }
    }

    private void writeFieldUseSignature(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("useSignature", "urn:enterprise.soap.sforce.com","useSignature","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), useSignature, useSignature__is_set);
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       writeFields1(__out, __typeMapper);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        loadFields1(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[Email ");
      toString1(sb);

      sb.append("]\n");
      return sb.toString();
    }

    private void toStringHelper(StringBuilder sb, String name, Object value) {
      sb.append(' ').append(name).append("='").append(com.sforce.ws.util.Verbose.toString(value)).append("'\n");
    }

    private void writeFields1(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      writeFieldBccSender(__out, __typeMapper);
      writeFieldEmailPriority(__out, __typeMapper);
      writeFieldReplyTo(__out, __typeMapper);
      writeFieldSaveAsActivity(__out, __typeMapper);
      writeFieldSenderDisplayName(__out, __typeMapper);
      writeFieldSubject(__out, __typeMapper);
      writeFieldUseSignature(__out, __typeMapper);
    }

    private void loadFields1(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      setBccSender(__in, __typeMapper);
      setEmailPriority(__in, __typeMapper);
      setReplyTo(__in, __typeMapper);
      setSaveAsActivity(__in, __typeMapper);
      setSenderDisplayName(__in, __typeMapper);
      setSubject(__in, __typeMapper);
      setUseSignature(__in, __typeMapper);
    }

    private void toString1(StringBuilder sb) {
      toStringHelper(sb, "bccSender", bccSender);
      toStringHelper(sb, "emailPriority", emailPriority);
      toStringHelper(sb, "replyTo", replyTo);
      toStringHelper(sb, "saveAsActivity", saveAsActivity);
      toStringHelper(sb, "senderDisplayName", senderDisplayName);
      toStringHelper(sb, "subject", subject);
      toStringHelper(sb, "useSignature", useSignature);
    }


}
