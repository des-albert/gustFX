package com.sforce.soap.enterprise;

/**
 * This is a generated class for the SObject Enterprise API.
 * Do not edit this file, as your changes will be lost.
 */
public class DescribeNouns_element implements com.sforce.ws.bind.XMLizable {

    /**
     * Constructor
     */
    public DescribeNouns_element() {}

    /* Cache the typeInfo instead of declaring static fields throughout*/
    private transient java.util.Map<String, com.sforce.ws.bind.TypeInfo> typeInfoCache = new java.util.HashMap<String, com.sforce.ws.bind.TypeInfo>();
    private com.sforce.ws.bind.TypeInfo _lookupTypeInfo(String fieldName, String namespace, String name, String typeNS, String type, int minOcc, int maxOcc, boolean elementForm) {
      com.sforce.ws.bind.TypeInfo typeInfo = typeInfoCache.get(fieldName);
      if (typeInfo == null) {
        typeInfo = new com.sforce.ws.bind.TypeInfo(namespace, name, typeNS, type, minOcc, maxOcc, elementForm);
        typeInfoCache.put(fieldName, typeInfo);
      }
      return typeInfo;
    }

    /**
     * element : nouns of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String[]
     */
    private boolean nouns__is_set = false;

    private java.lang.String[] nouns = new java.lang.String[0];

    public java.lang.String[] getNouns() {
      return nouns;
    }

    public void setNouns(java.lang.String[] nouns) {
      this.nouns = nouns;
      nouns__is_set = true;
    }

    protected void setNouns(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("nouns", "urn:enterprise.soap.sforce.com","nouns","http://www.w3.org/2001/XMLSchema","string",0,100,true))) {
        setNouns((java.lang.String[])__typeMapper.readObject(__in, _lookupTypeInfo("nouns", "urn:enterprise.soap.sforce.com","nouns","http://www.w3.org/2001/XMLSchema","string",0,100,true), java.lang.String[].class));
      }
    }

    private void writeFieldNouns(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("nouns", "urn:enterprise.soap.sforce.com","nouns","http://www.w3.org/2001/XMLSchema","string",0,100,true), nouns, nouns__is_set);
    }

    /**
     * element : onlyRenamed of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean onlyRenamed__is_set = false;

    private boolean onlyRenamed;

    public boolean getOnlyRenamed() {
      return onlyRenamed;
    }

    public boolean isOnlyRenamed() {
      return onlyRenamed;
    }

    public void setOnlyRenamed(boolean onlyRenamed) {
      this.onlyRenamed = onlyRenamed;
      onlyRenamed__is_set = true;
    }

    protected void setOnlyRenamed(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("onlyRenamed", "urn:enterprise.soap.sforce.com","onlyRenamed","http://www.w3.org/2001/XMLSchema","boolean",1,1,true))) {
        setOnlyRenamed(__typeMapper.readBoolean(__in, _lookupTypeInfo("onlyRenamed", "urn:enterprise.soap.sforce.com","onlyRenamed","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), boolean.class));
      }
    }

    private void writeFieldOnlyRenamed(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("onlyRenamed", "urn:enterprise.soap.sforce.com","onlyRenamed","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), onlyRenamed, onlyRenamed__is_set);
    }

    /**
     * element : includeFields of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean includeFields__is_set = false;

    private boolean includeFields;

    public boolean getIncludeFields() {
      return includeFields;
    }

    public boolean isIncludeFields() {
      return includeFields;
    }

    public void setIncludeFields(boolean includeFields) {
      this.includeFields = includeFields;
      includeFields__is_set = true;
    }

    protected void setIncludeFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("includeFields", "urn:enterprise.soap.sforce.com","includeFields","http://www.w3.org/2001/XMLSchema","boolean",1,1,true))) {
        setIncludeFields(__typeMapper.readBoolean(__in, _lookupTypeInfo("includeFields", "urn:enterprise.soap.sforce.com","includeFields","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), boolean.class));
      }
    }

    private void writeFieldIncludeFields(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("includeFields", "urn:enterprise.soap.sforce.com","includeFields","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), includeFields, includeFields__is_set);
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       writeFields1(__out, __typeMapper);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        loadFields1(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[DescribeNouns_element ");
      toString1(sb);

      sb.append("]\n");
      return sb.toString();
    }

    private void toStringHelper(StringBuilder sb, String name, Object value) {
      sb.append(' ').append(name).append("='").append(com.sforce.ws.util.Verbose.toString(value)).append("'\n");
    }

    private void writeFields1(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      writeFieldNouns(__out, __typeMapper);
      writeFieldOnlyRenamed(__out, __typeMapper);
      writeFieldIncludeFields(__out, __typeMapper);
    }

    private void loadFields1(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      setNouns(__in, __typeMapper);
      setOnlyRenamed(__in, __typeMapper);
      setIncludeFields(__in, __typeMapper);
    }

    private void toString1(StringBuilder sb) {
      toStringHelper(sb, "nouns", nouns);
      toStringHelper(sb, "onlyRenamed", onlyRenamed);
      toStringHelper(sb, "includeFields", includeFields);
    }


}
