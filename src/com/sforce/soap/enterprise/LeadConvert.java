package com.sforce.soap.enterprise;

/**
 * This is a generated class for the SObject Enterprise API.
 * Do not edit this file, as your changes will be lost.
 */
public class LeadConvert implements com.sforce.ws.bind.XMLizable {

    /**
     * Constructor
     */
    public LeadConvert() {}

    /* Cache the typeInfo instead of declaring static fields throughout*/
    private transient java.util.Map<String, com.sforce.ws.bind.TypeInfo> typeInfoCache = new java.util.HashMap<String, com.sforce.ws.bind.TypeInfo>();
    private com.sforce.ws.bind.TypeInfo _lookupTypeInfo(String fieldName, String namespace, String name, String typeNS, String type, int minOcc, int maxOcc, boolean elementForm) {
      com.sforce.ws.bind.TypeInfo typeInfo = typeInfoCache.get(fieldName);
      if (typeInfo == null) {
        typeInfo = new com.sforce.ws.bind.TypeInfo(namespace, name, typeNS, type, minOcc, maxOcc, elementForm);
        typeInfoCache.put(fieldName, typeInfo);
      }
      return typeInfo;
    }

    /**
     * element : accountId of type {urn:enterprise.soap.sforce.com}ID
     * java type: java.lang.String
     */
    private boolean accountId__is_set = false;

    private java.lang.String accountId;

    public java.lang.String getAccountId() {
      return accountId;
    }

    public void setAccountId(java.lang.String accountId) {
      this.accountId = accountId;
      accountId__is_set = true;
    }

    protected void setAccountId(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("accountId", "urn:enterprise.soap.sforce.com","accountId","urn:enterprise.soap.sforce.com","ID",1,1,true))) {
        setAccountId(__typeMapper.readString(__in, _lookupTypeInfo("accountId", "urn:enterprise.soap.sforce.com","accountId","urn:enterprise.soap.sforce.com","ID",1,1,true), java.lang.String.class));
      }
    }

    private void writeFieldAccountId(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("accountId", "urn:enterprise.soap.sforce.com","accountId","urn:enterprise.soap.sforce.com","ID",1,1,true), accountId, accountId__is_set);
    }

    /**
     * element : accountRecord of type {urn:sobject.enterprise.soap.sforce.com}sObject
     * java type: com.sforce.soap.enterprise.sobject.SObject
     */
    private boolean accountRecord__is_set = false;

    private com.sforce.soap.enterprise.sobject.SObject accountRecord;

    public com.sforce.soap.enterprise.sobject.SObject getAccountRecord() {
      return accountRecord;
    }

    public void setAccountRecord(com.sforce.soap.enterprise.sobject.SObject accountRecord) {
      this.accountRecord = accountRecord;
      accountRecord__is_set = true;
    }

    protected void setAccountRecord(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("accountRecord", "urn:enterprise.soap.sforce.com","accountRecord","urn:sobject.enterprise.soap.sforce.com","sObject",1,1,true))) {
        setAccountRecord((com.sforce.soap.enterprise.sobject.SObject)__typeMapper.readObject(__in, _lookupTypeInfo("accountRecord", "urn:enterprise.soap.sforce.com","accountRecord","urn:sobject.enterprise.soap.sforce.com","sObject",1,1,true), com.sforce.soap.enterprise.sobject.SObject.class));
      }
    }

    private void writeFieldAccountRecord(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("accountRecord", "urn:enterprise.soap.sforce.com","accountRecord","urn:sobject.enterprise.soap.sforce.com","sObject",1,1,true), accountRecord, accountRecord__is_set);
    }

    /**
     * element : bypassAccountDedupeCheck of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: java.lang.Boolean
     */
    private boolean bypassAccountDedupeCheck__is_set = false;

    private java.lang.Boolean bypassAccountDedupeCheck;

    public java.lang.Boolean getBypassAccountDedupeCheck() {
      return bypassAccountDedupeCheck;
    }

    public void setBypassAccountDedupeCheck(java.lang.Boolean bypassAccountDedupeCheck) {
      this.bypassAccountDedupeCheck = bypassAccountDedupeCheck;
      bypassAccountDedupeCheck__is_set = true;
    }

    protected void setBypassAccountDedupeCheck(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("bypassAccountDedupeCheck", "urn:enterprise.soap.sforce.com","bypassAccountDedupeCheck","http://www.w3.org/2001/XMLSchema","boolean",1,1,true))) {
        setBypassAccountDedupeCheck((java.lang.Boolean)__typeMapper.readObject(__in, _lookupTypeInfo("bypassAccountDedupeCheck", "urn:enterprise.soap.sforce.com","bypassAccountDedupeCheck","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), java.lang.Boolean.class));
      }
    }

    private void writeFieldBypassAccountDedupeCheck(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("bypassAccountDedupeCheck", "urn:enterprise.soap.sforce.com","bypassAccountDedupeCheck","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), bypassAccountDedupeCheck, bypassAccountDedupeCheck__is_set);
    }

    /**
     * element : bypassContactDedupeCheck of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: java.lang.Boolean
     */
    private boolean bypassContactDedupeCheck__is_set = false;

    private java.lang.Boolean bypassContactDedupeCheck;

    public java.lang.Boolean getBypassContactDedupeCheck() {
      return bypassContactDedupeCheck;
    }

    public void setBypassContactDedupeCheck(java.lang.Boolean bypassContactDedupeCheck) {
      this.bypassContactDedupeCheck = bypassContactDedupeCheck;
      bypassContactDedupeCheck__is_set = true;
    }

    protected void setBypassContactDedupeCheck(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("bypassContactDedupeCheck", "urn:enterprise.soap.sforce.com","bypassContactDedupeCheck","http://www.w3.org/2001/XMLSchema","boolean",1,1,true))) {
        setBypassContactDedupeCheck((java.lang.Boolean)__typeMapper.readObject(__in, _lookupTypeInfo("bypassContactDedupeCheck", "urn:enterprise.soap.sforce.com","bypassContactDedupeCheck","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), java.lang.Boolean.class));
      }
    }

    private void writeFieldBypassContactDedupeCheck(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("bypassContactDedupeCheck", "urn:enterprise.soap.sforce.com","bypassContactDedupeCheck","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), bypassContactDedupeCheck, bypassContactDedupeCheck__is_set);
    }

    /**
     * element : contactId of type {urn:enterprise.soap.sforce.com}ID
     * java type: java.lang.String
     */
    private boolean contactId__is_set = false;

    private java.lang.String contactId;

    public java.lang.String getContactId() {
      return contactId;
    }

    public void setContactId(java.lang.String contactId) {
      this.contactId = contactId;
      contactId__is_set = true;
    }

    protected void setContactId(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("contactId", "urn:enterprise.soap.sforce.com","contactId","urn:enterprise.soap.sforce.com","ID",1,1,true))) {
        setContactId(__typeMapper.readString(__in, _lookupTypeInfo("contactId", "urn:enterprise.soap.sforce.com","contactId","urn:enterprise.soap.sforce.com","ID",1,1,true), java.lang.String.class));
      }
    }

    private void writeFieldContactId(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("contactId", "urn:enterprise.soap.sforce.com","contactId","urn:enterprise.soap.sforce.com","ID",1,1,true), contactId, contactId__is_set);
    }

    /**
     * element : contactRecord of type {urn:sobject.enterprise.soap.sforce.com}sObject
     * java type: com.sforce.soap.enterprise.sobject.SObject
     */
    private boolean contactRecord__is_set = false;

    private com.sforce.soap.enterprise.sobject.SObject contactRecord;

    public com.sforce.soap.enterprise.sobject.SObject getContactRecord() {
      return contactRecord;
    }

    public void setContactRecord(com.sforce.soap.enterprise.sobject.SObject contactRecord) {
      this.contactRecord = contactRecord;
      contactRecord__is_set = true;
    }

    protected void setContactRecord(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("contactRecord", "urn:enterprise.soap.sforce.com","contactRecord","urn:sobject.enterprise.soap.sforce.com","sObject",1,1,true))) {
        setContactRecord((com.sforce.soap.enterprise.sobject.SObject)__typeMapper.readObject(__in, _lookupTypeInfo("contactRecord", "urn:enterprise.soap.sforce.com","contactRecord","urn:sobject.enterprise.soap.sforce.com","sObject",1,1,true), com.sforce.soap.enterprise.sobject.SObject.class));
      }
    }

    private void writeFieldContactRecord(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("contactRecord", "urn:enterprise.soap.sforce.com","contactRecord","urn:sobject.enterprise.soap.sforce.com","sObject",1,1,true), contactRecord, contactRecord__is_set);
    }

    /**
     * element : convertedStatus of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean convertedStatus__is_set = false;

    private java.lang.String convertedStatus;

    public java.lang.String getConvertedStatus() {
      return convertedStatus;
    }

    public void setConvertedStatus(java.lang.String convertedStatus) {
      this.convertedStatus = convertedStatus;
      convertedStatus__is_set = true;
    }

    protected void setConvertedStatus(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("convertedStatus", "urn:enterprise.soap.sforce.com","convertedStatus","http://www.w3.org/2001/XMLSchema","string",1,1,true))) {
        setConvertedStatus(__typeMapper.readString(__in, _lookupTypeInfo("convertedStatus", "urn:enterprise.soap.sforce.com","convertedStatus","http://www.w3.org/2001/XMLSchema","string",1,1,true), java.lang.String.class));
      }
    }

    private void writeFieldConvertedStatus(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("convertedStatus", "urn:enterprise.soap.sforce.com","convertedStatus","http://www.w3.org/2001/XMLSchema","string",1,1,true), convertedStatus, convertedStatus__is_set);
    }

    /**
     * element : doNotCreateOpportunity of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean doNotCreateOpportunity__is_set = false;

    private boolean doNotCreateOpportunity;

    public boolean getDoNotCreateOpportunity() {
      return doNotCreateOpportunity;
    }

    public boolean isDoNotCreateOpportunity() {
      return doNotCreateOpportunity;
    }

    public void setDoNotCreateOpportunity(boolean doNotCreateOpportunity) {
      this.doNotCreateOpportunity = doNotCreateOpportunity;
      doNotCreateOpportunity__is_set = true;
    }

    protected void setDoNotCreateOpportunity(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("doNotCreateOpportunity", "urn:enterprise.soap.sforce.com","doNotCreateOpportunity","http://www.w3.org/2001/XMLSchema","boolean",1,1,true))) {
        setDoNotCreateOpportunity(__typeMapper.readBoolean(__in, _lookupTypeInfo("doNotCreateOpportunity", "urn:enterprise.soap.sforce.com","doNotCreateOpportunity","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), boolean.class));
      }
    }

    private void writeFieldDoNotCreateOpportunity(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("doNotCreateOpportunity", "urn:enterprise.soap.sforce.com","doNotCreateOpportunity","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), doNotCreateOpportunity, doNotCreateOpportunity__is_set);
    }

    /**
     * element : leadId of type {urn:enterprise.soap.sforce.com}ID
     * java type: java.lang.String
     */
    private boolean leadId__is_set = false;

    private java.lang.String leadId;

    public java.lang.String getLeadId() {
      return leadId;
    }

    public void setLeadId(java.lang.String leadId) {
      this.leadId = leadId;
      leadId__is_set = true;
    }

    protected void setLeadId(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("leadId", "urn:enterprise.soap.sforce.com","leadId","urn:enterprise.soap.sforce.com","ID",1,1,true))) {
        setLeadId(__typeMapper.readString(__in, _lookupTypeInfo("leadId", "urn:enterprise.soap.sforce.com","leadId","urn:enterprise.soap.sforce.com","ID",1,1,true), java.lang.String.class));
      }
    }

    private void writeFieldLeadId(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("leadId", "urn:enterprise.soap.sforce.com","leadId","urn:enterprise.soap.sforce.com","ID",1,1,true), leadId, leadId__is_set);
    }

    /**
     * element : opportunityId of type {urn:enterprise.soap.sforce.com}ID
     * java type: java.lang.String
     */
    private boolean opportunityId__is_set = false;

    private java.lang.String opportunityId;

    public java.lang.String getOpportunityId() {
      return opportunityId;
    }

    public void setOpportunityId(java.lang.String opportunityId) {
      this.opportunityId = opportunityId;
      opportunityId__is_set = true;
    }

    protected void setOpportunityId(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("opportunityId", "urn:enterprise.soap.sforce.com","opportunityId","urn:enterprise.soap.sforce.com","ID",1,1,true))) {
        setOpportunityId(__typeMapper.readString(__in, _lookupTypeInfo("opportunityId", "urn:enterprise.soap.sforce.com","opportunityId","urn:enterprise.soap.sforce.com","ID",1,1,true), java.lang.String.class));
      }
    }

    private void writeFieldOpportunityId(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("opportunityId", "urn:enterprise.soap.sforce.com","opportunityId","urn:enterprise.soap.sforce.com","ID",1,1,true), opportunityId, opportunityId__is_set);
    }

    /**
     * element : opportunityName of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean opportunityName__is_set = false;

    private java.lang.String opportunityName;

    public java.lang.String getOpportunityName() {
      return opportunityName;
    }

    public void setOpportunityName(java.lang.String opportunityName) {
      this.opportunityName = opportunityName;
      opportunityName__is_set = true;
    }

    protected void setOpportunityName(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("opportunityName", "urn:enterprise.soap.sforce.com","opportunityName","http://www.w3.org/2001/XMLSchema","string",1,1,true))) {
        setOpportunityName(__typeMapper.readString(__in, _lookupTypeInfo("opportunityName", "urn:enterprise.soap.sforce.com","opportunityName","http://www.w3.org/2001/XMLSchema","string",1,1,true), java.lang.String.class));
      }
    }

    private void writeFieldOpportunityName(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("opportunityName", "urn:enterprise.soap.sforce.com","opportunityName","http://www.w3.org/2001/XMLSchema","string",1,1,true), opportunityName, opportunityName__is_set);
    }

    /**
     * element : opportunityRecord of type {urn:sobject.enterprise.soap.sforce.com}sObject
     * java type: com.sforce.soap.enterprise.sobject.SObject
     */
    private boolean opportunityRecord__is_set = false;

    private com.sforce.soap.enterprise.sobject.SObject opportunityRecord;

    public com.sforce.soap.enterprise.sobject.SObject getOpportunityRecord() {
      return opportunityRecord;
    }

    public void setOpportunityRecord(com.sforce.soap.enterprise.sobject.SObject opportunityRecord) {
      this.opportunityRecord = opportunityRecord;
      opportunityRecord__is_set = true;
    }

    protected void setOpportunityRecord(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("opportunityRecord", "urn:enterprise.soap.sforce.com","opportunityRecord","urn:sobject.enterprise.soap.sforce.com","sObject",1,1,true))) {
        setOpportunityRecord((com.sforce.soap.enterprise.sobject.SObject)__typeMapper.readObject(__in, _lookupTypeInfo("opportunityRecord", "urn:enterprise.soap.sforce.com","opportunityRecord","urn:sobject.enterprise.soap.sforce.com","sObject",1,1,true), com.sforce.soap.enterprise.sobject.SObject.class));
      }
    }

    private void writeFieldOpportunityRecord(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("opportunityRecord", "urn:enterprise.soap.sforce.com","opportunityRecord","urn:sobject.enterprise.soap.sforce.com","sObject",1,1,true), opportunityRecord, opportunityRecord__is_set);
    }

    /**
     * element : overwriteLeadSource of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean overwriteLeadSource__is_set = false;

    private boolean overwriteLeadSource;

    public boolean getOverwriteLeadSource() {
      return overwriteLeadSource;
    }

    public boolean isOverwriteLeadSource() {
      return overwriteLeadSource;
    }

    public void setOverwriteLeadSource(boolean overwriteLeadSource) {
      this.overwriteLeadSource = overwriteLeadSource;
      overwriteLeadSource__is_set = true;
    }

    protected void setOverwriteLeadSource(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("overwriteLeadSource", "urn:enterprise.soap.sforce.com","overwriteLeadSource","http://www.w3.org/2001/XMLSchema","boolean",1,1,true))) {
        setOverwriteLeadSource(__typeMapper.readBoolean(__in, _lookupTypeInfo("overwriteLeadSource", "urn:enterprise.soap.sforce.com","overwriteLeadSource","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), boolean.class));
      }
    }

    private void writeFieldOverwriteLeadSource(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("overwriteLeadSource", "urn:enterprise.soap.sforce.com","overwriteLeadSource","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), overwriteLeadSource, overwriteLeadSource__is_set);
    }

    /**
     * element : ownerId of type {urn:enterprise.soap.sforce.com}ID
     * java type: java.lang.String
     */
    private boolean ownerId__is_set = false;

    private java.lang.String ownerId;

    public java.lang.String getOwnerId() {
      return ownerId;
    }

    public void setOwnerId(java.lang.String ownerId) {
      this.ownerId = ownerId;
      ownerId__is_set = true;
    }

    protected void setOwnerId(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("ownerId", "urn:enterprise.soap.sforce.com","ownerId","urn:enterprise.soap.sforce.com","ID",1,1,true))) {
        setOwnerId(__typeMapper.readString(__in, _lookupTypeInfo("ownerId", "urn:enterprise.soap.sforce.com","ownerId","urn:enterprise.soap.sforce.com","ID",1,1,true), java.lang.String.class));
      }
    }

    private void writeFieldOwnerId(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("ownerId", "urn:enterprise.soap.sforce.com","ownerId","urn:enterprise.soap.sforce.com","ID",1,1,true), ownerId, ownerId__is_set);
    }

    /**
     * element : sendNotificationEmail of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean sendNotificationEmail__is_set = false;

    private boolean sendNotificationEmail;

    public boolean getSendNotificationEmail() {
      return sendNotificationEmail;
    }

    public boolean isSendNotificationEmail() {
      return sendNotificationEmail;
    }

    public void setSendNotificationEmail(boolean sendNotificationEmail) {
      this.sendNotificationEmail = sendNotificationEmail;
      sendNotificationEmail__is_set = true;
    }

    protected void setSendNotificationEmail(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("sendNotificationEmail", "urn:enterprise.soap.sforce.com","sendNotificationEmail","http://www.w3.org/2001/XMLSchema","boolean",1,1,true))) {
        setSendNotificationEmail(__typeMapper.readBoolean(__in, _lookupTypeInfo("sendNotificationEmail", "urn:enterprise.soap.sforce.com","sendNotificationEmail","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), boolean.class));
      }
    }

    private void writeFieldSendNotificationEmail(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("sendNotificationEmail", "urn:enterprise.soap.sforce.com","sendNotificationEmail","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), sendNotificationEmail, sendNotificationEmail__is_set);
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       writeFields1(__out, __typeMapper);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        loadFields1(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[LeadConvert ");
      toString1(sb);

      sb.append("]\n");
      return sb.toString();
    }

    private void toStringHelper(StringBuilder sb, String name, Object value) {
      sb.append(' ').append(name).append("='").append(com.sforce.ws.util.Verbose.toString(value)).append("'\n");
    }

    private void writeFields1(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      writeFieldAccountId(__out, __typeMapper);
      writeFieldAccountRecord(__out, __typeMapper);
      writeFieldBypassAccountDedupeCheck(__out, __typeMapper);
      writeFieldBypassContactDedupeCheck(__out, __typeMapper);
      writeFieldContactId(__out, __typeMapper);
      writeFieldContactRecord(__out, __typeMapper);
      writeFieldConvertedStatus(__out, __typeMapper);
      writeFieldDoNotCreateOpportunity(__out, __typeMapper);
      writeFieldLeadId(__out, __typeMapper);
      writeFieldOpportunityId(__out, __typeMapper);
      writeFieldOpportunityName(__out, __typeMapper);
      writeFieldOpportunityRecord(__out, __typeMapper);
      writeFieldOverwriteLeadSource(__out, __typeMapper);
      writeFieldOwnerId(__out, __typeMapper);
      writeFieldSendNotificationEmail(__out, __typeMapper);
    }

    private void loadFields1(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      setAccountId(__in, __typeMapper);
      setAccountRecord(__in, __typeMapper);
      setBypassAccountDedupeCheck(__in, __typeMapper);
      setBypassContactDedupeCheck(__in, __typeMapper);
      setContactId(__in, __typeMapper);
      setContactRecord(__in, __typeMapper);
      setConvertedStatus(__in, __typeMapper);
      setDoNotCreateOpportunity(__in, __typeMapper);
      setLeadId(__in, __typeMapper);
      setOpportunityId(__in, __typeMapper);
      setOpportunityName(__in, __typeMapper);
      setOpportunityRecord(__in, __typeMapper);
      setOverwriteLeadSource(__in, __typeMapper);
      setOwnerId(__in, __typeMapper);
      setSendNotificationEmail(__in, __typeMapper);
    }

    private void toString1(StringBuilder sb) {
      toStringHelper(sb, "accountId", accountId);
      toStringHelper(sb, "accountRecord", accountRecord);
      toStringHelper(sb, "bypassAccountDedupeCheck", bypassAccountDedupeCheck);
      toStringHelper(sb, "bypassContactDedupeCheck", bypassContactDedupeCheck);
      toStringHelper(sb, "contactId", contactId);
      toStringHelper(sb, "contactRecord", contactRecord);
      toStringHelper(sb, "convertedStatus", convertedStatus);
      toStringHelper(sb, "doNotCreateOpportunity", doNotCreateOpportunity);
      toStringHelper(sb, "leadId", leadId);
      toStringHelper(sb, "opportunityId", opportunityId);
      toStringHelper(sb, "opportunityName", opportunityName);
      toStringHelper(sb, "opportunityRecord", opportunityRecord);
      toStringHelper(sb, "overwriteLeadSource", overwriteLeadSource);
      toStringHelper(sb, "ownerId", ownerId);
      toStringHelper(sb, "sendNotificationEmail", sendNotificationEmail);
    }


}
