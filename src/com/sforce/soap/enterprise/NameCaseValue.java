package com.sforce.soap.enterprise;

/**
 * This is a generated class for the SObject Enterprise API.
 * Do not edit this file, as your changes will be lost.
 */
public class NameCaseValue implements com.sforce.ws.bind.XMLizable {

    /**
     * Constructor
     */
    public NameCaseValue() {}

    /* Cache the typeInfo instead of declaring static fields throughout*/
    private transient java.util.Map<String, com.sforce.ws.bind.TypeInfo> typeInfoCache = new java.util.HashMap<String, com.sforce.ws.bind.TypeInfo>();
    private com.sforce.ws.bind.TypeInfo _lookupTypeInfo(String fieldName, String namespace, String name, String typeNS, String type, int minOcc, int maxOcc, boolean elementForm) {
      com.sforce.ws.bind.TypeInfo typeInfo = typeInfoCache.get(fieldName);
      if (typeInfo == null) {
        typeInfo = new com.sforce.ws.bind.TypeInfo(namespace, name, typeNS, type, minOcc, maxOcc, elementForm);
        typeInfoCache.put(fieldName, typeInfo);
      }
      return typeInfo;
    }

    /**
     * element : article of type {urn:enterprise.soap.sforce.com}Article
     * java type: com.sforce.soap.enterprise.Article
     */
    private boolean article__is_set = false;

    private com.sforce.soap.enterprise.Article article;

    public com.sforce.soap.enterprise.Article getArticle() {
      return article;
    }

    public void setArticle(com.sforce.soap.enterprise.Article article) {
      this.article = article;
      article__is_set = true;
    }

    protected void setArticle(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("article", "urn:enterprise.soap.sforce.com","article","urn:enterprise.soap.sforce.com","Article",1,1,true))) {
        setArticle((com.sforce.soap.enterprise.Article)__typeMapper.readObject(__in, _lookupTypeInfo("article", "urn:enterprise.soap.sforce.com","article","urn:enterprise.soap.sforce.com","Article",1,1,true), com.sforce.soap.enterprise.Article.class));
      }
    }

    private void writeFieldArticle(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("article", "urn:enterprise.soap.sforce.com","article","urn:enterprise.soap.sforce.com","Article",1,1,true), article, article__is_set);
    }

    /**
     * element : caseType of type {urn:enterprise.soap.sforce.com}CaseType
     * java type: com.sforce.soap.enterprise.CaseType
     */
    private boolean caseType__is_set = false;

    private com.sforce.soap.enterprise.CaseType caseType;

    public com.sforce.soap.enterprise.CaseType getCaseType() {
      return caseType;
    }

    public void setCaseType(com.sforce.soap.enterprise.CaseType caseType) {
      this.caseType = caseType;
      caseType__is_set = true;
    }

    protected void setCaseType(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("caseType", "urn:enterprise.soap.sforce.com","caseType","urn:enterprise.soap.sforce.com","CaseType",1,1,true))) {
        setCaseType((com.sforce.soap.enterprise.CaseType)__typeMapper.readObject(__in, _lookupTypeInfo("caseType", "urn:enterprise.soap.sforce.com","caseType","urn:enterprise.soap.sforce.com","CaseType",1,1,true), com.sforce.soap.enterprise.CaseType.class));
      }
    }

    private void writeFieldCaseType(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("caseType", "urn:enterprise.soap.sforce.com","caseType","urn:enterprise.soap.sforce.com","CaseType",1,1,true), caseType, caseType__is_set);
    }

    /**
     * element : number of type {urn:enterprise.soap.sforce.com}GrammaticalNumber
     * java type: com.sforce.soap.enterprise.GrammaticalNumber
     */
    private boolean number__is_set = false;

    private com.sforce.soap.enterprise.GrammaticalNumber number;

    public com.sforce.soap.enterprise.GrammaticalNumber getNumber() {
      return number;
    }

    public void setNumber(com.sforce.soap.enterprise.GrammaticalNumber number) {
      this.number = number;
      number__is_set = true;
    }

    protected void setNumber(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("number", "urn:enterprise.soap.sforce.com","number","urn:enterprise.soap.sforce.com","GrammaticalNumber",1,1,true))) {
        setNumber((com.sforce.soap.enterprise.GrammaticalNumber)__typeMapper.readObject(__in, _lookupTypeInfo("number", "urn:enterprise.soap.sforce.com","number","urn:enterprise.soap.sforce.com","GrammaticalNumber",1,1,true), com.sforce.soap.enterprise.GrammaticalNumber.class));
      }
    }

    private void writeFieldNumber(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("number", "urn:enterprise.soap.sforce.com","number","urn:enterprise.soap.sforce.com","GrammaticalNumber",1,1,true), number, number__is_set);
    }

    /**
     * element : possessive of type {urn:enterprise.soap.sforce.com}Possessive
     * java type: com.sforce.soap.enterprise.Possessive
     */
    private boolean possessive__is_set = false;

    private com.sforce.soap.enterprise.Possessive possessive;

    public com.sforce.soap.enterprise.Possessive getPossessive() {
      return possessive;
    }

    public void setPossessive(com.sforce.soap.enterprise.Possessive possessive) {
      this.possessive = possessive;
      possessive__is_set = true;
    }

    protected void setPossessive(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("possessive", "urn:enterprise.soap.sforce.com","possessive","urn:enterprise.soap.sforce.com","Possessive",1,1,true))) {
        setPossessive((com.sforce.soap.enterprise.Possessive)__typeMapper.readObject(__in, _lookupTypeInfo("possessive", "urn:enterprise.soap.sforce.com","possessive","urn:enterprise.soap.sforce.com","Possessive",1,1,true), com.sforce.soap.enterprise.Possessive.class));
      }
    }

    private void writeFieldPossessive(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("possessive", "urn:enterprise.soap.sforce.com","possessive","urn:enterprise.soap.sforce.com","Possessive",1,1,true), possessive, possessive__is_set);
    }

    /**
     * element : value of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean value__is_set = false;

    private java.lang.String value;

    public java.lang.String getValue() {
      return value;
    }

    public void setValue(java.lang.String value) {
      this.value = value;
      value__is_set = true;
    }

    protected void setValue(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("value", "urn:enterprise.soap.sforce.com","value","http://www.w3.org/2001/XMLSchema","string",1,1,true))) {
        setValue(__typeMapper.readString(__in, _lookupTypeInfo("value", "urn:enterprise.soap.sforce.com","value","http://www.w3.org/2001/XMLSchema","string",1,1,true), java.lang.String.class));
      }
    }

    private void writeFieldValue(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("value", "urn:enterprise.soap.sforce.com","value","http://www.w3.org/2001/XMLSchema","string",1,1,true), value, value__is_set);
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       writeFields1(__out, __typeMapper);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        loadFields1(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[NameCaseValue ");
      toString1(sb);

      sb.append("]\n");
      return sb.toString();
    }

    private void toStringHelper(StringBuilder sb, String name, Object value) {
      sb.append(' ').append(name).append("='").append(com.sforce.ws.util.Verbose.toString(value)).append("'\n");
    }

    private void writeFields1(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      writeFieldArticle(__out, __typeMapper);
      writeFieldCaseType(__out, __typeMapper);
      writeFieldNumber(__out, __typeMapper);
      writeFieldPossessive(__out, __typeMapper);
      writeFieldValue(__out, __typeMapper);
    }

    private void loadFields1(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      setArticle(__in, __typeMapper);
      setCaseType(__in, __typeMapper);
      setNumber(__in, __typeMapper);
      setPossessive(__in, __typeMapper);
      setValue(__in, __typeMapper);
    }

    private void toString1(StringBuilder sb) {
      toStringHelper(sb, "article", article);
      toStringHelper(sb, "caseType", caseType);
      toStringHelper(sb, "number", number);
      toStringHelper(sb, "possessive", possessive);
      toStringHelper(sb, "value", value);
    }


}
