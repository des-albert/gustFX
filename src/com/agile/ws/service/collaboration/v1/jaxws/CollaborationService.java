
package com.agile.ws.service.collaboration.v1.jaxws;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.10-b140319.1121
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "CollaborationService", targetNamespace = "http://xmlns.oracle.com/AgileServices/Core/Collaboration/V1", wsdlLocation = "http://agile.us.cray.com/CoreService/services/Collaboration?wsdl")
public class CollaborationService
    extends Service
{

    private final static URL COLLABORATIONSERVICE_WSDL_LOCATION;
    private final static WebServiceException COLLABORATIONSERVICE_EXCEPTION;
    private final static QName COLLABORATIONSERVICE_QNAME = new QName("http://xmlns.oracle.com/AgileServices/Core/Collaboration/V1", "CollaborationService");

    static {
        WebServiceException e = null;
        URL url = null;
        try {
            url = new URL(com.agile.ws.service.collaboration.v1.jaxws.CollaborationService.class.getResource("."), "http://agile.us.cray.com/CoreService/services/Collaboration?wsdl");
        } catch (MalformedURLException murl) {
            e = new WebServiceException(murl);
        }
        COLLABORATIONSERVICE_WSDL_LOCATION = url;
        COLLABORATIONSERVICE_EXCEPTION = e;
    }

    public CollaborationService() {
        super(__getWsdlLocation(), COLLABORATIONSERVICE_QNAME);
    }

    public CollaborationService(WebServiceFeature... features) {
        super(__getWsdlLocation(), COLLABORATIONSERVICE_QNAME, features);
    }

    public CollaborationService(URL wsdlLocation) {
        super(wsdlLocation, COLLABORATIONSERVICE_QNAME);
    }

    public CollaborationService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, COLLABORATIONSERVICE_QNAME, features);
    }

    public CollaborationService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public CollaborationService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns CollaborationPortType
     */
    @WebEndpoint(name = "Collaboration")
    public CollaborationPortType getCollaboration() {
        return super.getPort(new QName("http://xmlns.oracle.com/AgileServices/Core/Collaboration/V1", "Collaboration"), CollaborationPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CollaborationPortType
     */
    @WebEndpoint(name = "Collaboration")
    public CollaborationPortType getCollaboration(WebServiceFeature... features) {
        return super.getPort(new QName("http://xmlns.oracle.com/AgileServices/Core/Collaboration/V1", "Collaboration"), CollaborationPortType.class, features);
    }

    private static URL __getWsdlLocation() {
        if (COLLABORATIONSERVICE_EXCEPTION!= null) {
            throw COLLABORATIONSERVICE_EXCEPTION;
        }
        return COLLABORATIONSERVICE_WSDL_LOCATION;
    }

}
